action general a_quit named "quit";
action general a_lookaround named "look around", "look";
action transitive a_examine named "examine", "look at", "x";
action strict ditransitive a_unlock named "unlock", "open" uses conjunctions "with";

// All examinable objects.
object archetype o_examinables
{
	// called on first examine.
	// override this.
	function examineFirst()
	{
		textln("[EXAMINE FIRST]");
	}
	
	// called on first examine.
	// override this.
	function examineAgain()
	{
		textln("[EXAMINE AGAIN]");
	}

	onAction(a_examine)
	{
		if (examined)
			examineAgain();
		else
			examineFirst();
		examined = true;
	}

}


// All keys.
object archetype o_keys : o_examinables
{
}

object o_wooden_key : o_keys named "wooden key", "key"
{
	override function examineFirst()
	{
		textln("It's a wooden key.");
	}
	
	override function examineAgain()
	{
		textln("It's still a wooden key.");
	}
	
	onWorldBrowse()
	{
		textln("A wooden key is here.");
	}

}

object o_steel_key : o_keys named "steel key", "key"
{
	override function examineFirst()
	{
		textln("It's a steel key.");
	}
	
	override function examineAgain()
	{
		textln("It's still a steel key.");
	}

	onWorldBrowse()
	{
		textln("A steel key is here.");
	}

}


object archetype o_doors : o_examinables
{
	// fallback on an incorrect key.
	onActionWithAncestor(a_unlock, o_keys)
	{
		textln("This key isn't working.");
	}
	
	// fallback on an incorrect anything.
	onActionWithOther(a_unlock)
	{
		textln("I can't unlock this with that.");
	}
}

object o_wooden_door : o_doors named "wooden door", "door"
{
	override function examineFirst()
	{
		textln("It's a wooden door.");
	}
	
	override function examineAgain()
	{
		textln("It's still a wooden door.");
	}

	onWorldBrowse()
	{
		textln("A wooden door is here.");
	}

	onActionWith(a_unlock, o_wooden_key)
	{
		textln("You unlock the wooden door.");
	}
}

object o_steel_door : o_doors named "steel door", "door"
{
	override function examineFirst()
	{
		textln("It's a steel door.");
	}
	
	override function examineAgain()
	{
		textln("It's still a steel door.");
	}

	onWorldBrowse()
	{
		textln("A steel door is here.");
	}

	onActionWith(a_unlock, o_steel_key)
	{
		textln("You unlock the steel door.");
	}
}

world
{
	start()
	{
		giveObject(world, o_wooden_key);
		giveObject(world, o_steel_key);
		giveObject(world, o_wooden_door);
		giveObject(world, o_steel_door);
		textln("You are in a room with some keys and doors.");
		textln("You can EXAMINE things or UNLOCK things.");
		browse(world);
	}
	
	onAction(a_lookaround)
	{
		browse(world);
	}

	onMalformedCommand()
	{
		textln("I don't understand.");
	}

	onIncompleteCommand(a_examine)
	{
		textln("Examine what?");
	}

	onMalformedCommand(a_examine)
	{
		textln("I don't understand. That's not a thing I can examine.");
	}

	onUnhandledAction(a_examine)
	{
		textln("I can't examine that.");
	}

	onIncompleteCommand(a_unlock)
	{
		textln("Unlock what with what?");
	}

	onMalformedCommand(a_unlock)
	{
		textln("I don't understand. That's not a thing I can unlock.");
	}

	onUnhandledAction(a_unlock)
	{
		textln("I can't unlock that.");
	}

	onAction(a_quit)
	{
		quit;
	}
}
