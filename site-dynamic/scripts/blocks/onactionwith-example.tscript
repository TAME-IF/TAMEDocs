action general a_quit named "quit", "exit";

action transitive a_talk named "talk to";
action transitive a_examine named "examine", "look at", "x";

action strict ditransitive a_mix named "mix", "combine" uses conjunctions "with", "and";
action strict reversed ditransitive a_give named "give" uses conjunctions "to";

module
{
	title = "Paint Delivery";
}

/********************************** All paint. *******************************/

object archetype o_paint
{
	// Override this!
	function getColor()
	{
		return false;
	}

	// On mix with any other paint-category item.
	onActionWithAncestor(a_mix, o_paint)
	{
		Textln("I think these don't need any more mixing.");
	}

	// On mix with anything else.
	onActionWithOther(a_mix)
	{
		Textln("I can't mix these together.");
	}
	
	onAction(a_examine)
	{
		Textln("Looks like a can of " + getColor() + " paint.");
	}
	
	onWorldBrowse()
	{
		Textln("A can of " + getColor() + " paint is here.");
	}
	
}

object o_paint_orange : o_paint named "paint", "orange paint"
{
	override function getColor()
	{
		return "orange";
	}

}

object o_paint_purple : o_paint named "paint", "purple paint"
{
	override function getColor()
	{
		return "purple";
	}
	
}

object o_paint_green : o_paint named "paint", "green paint"
{
	override function getColor()
	{
		return "green";
	}
}

object o_paint_blue : o_paint named "paint", "blue paint"
{
	override function getColor()
	{
		return "blue";
	}
}

object o_paint_yellow : o_paint named "paint", "yellow paint"
{
	override function getColor()
	{
		return "yellow";
	}
	
	onActionWith(a_mix, o_paint_blue)
	{
		Textln("Hey, it made green paint!");
		giveObject(world, o_paint_green);
	}

}

object o_paint_red : o_paint named "paint", "red paint"
{
	override function getColor()
	{
		return "red";
	}
	
	onActionWith(a_mix, o_paint_yellow)
	{
		Textln("Hey, it made orange paint!");
		giveObject(world, o_paint_orange);
	}
	
	onActionWith(a_mix, o_paint_blue)
	{
		Textln("Hey, it made purple paint!");
		giveObject(world, o_paint_purple);
	}
	
}


/********************************** All people. *******************************/

object archetype o_person
{
	init()
	{
		talkedto = false;
	}

	// fallback on wrong paint.
	onActionWithAncestor(a_give, o_paint)
	{
		Textln("\"I don't want that color of paint!\"");
	}

	onActionWithOther(a_give)
	{
		Textln("I don't think they want that.");
	}
	
}

// It's a person named Bob!
object o_bob : o_person named "bob", "guy", "man"
{
	onAction(a_talk)
	{
		if (!talkedto)
		{
			Textln("Bob says, \"I want orange paint.\"");
			talkedto = true;
		}
		else
		{
			Textln("Bob says, \"I still want orange paint.\"");
		}
	}

	onAction(a_examine)
	{
		Textln("It's a guy named Bob.");
		if (talkedto)
			Textln("He wants orange paint.");
	}
	
	onWorldBrowse()
	{
		Textln("A guy named Bob is here.");
	}

	onActionWith(a_give, o_paint_orange)
	{
		Textln("Bob says \"thank you\" and disappears.");
		removeObject(o_paint_orange);
		removeObject(o_bob);
	}

}

// It's a woman named Susan!
object o_susan : o_person named "susan", "gal", "woman"
{
	onAction(a_talk)
	{
		if (!talkedto)
		{
			Textln("Susan says, \"I want purple paint.\"");
			talkedto = true;
		}
		else
		{
			Textln("Susan says, \"I still want purple paint.\"");
		}
	}

	onAction(a_examine)
	{
		Textln("It's a gal named Susan.");
		if (talkedto)
			Textln("She wants purple paint.");
	}
	
	onWorldBrowse()
	{
		Textln("A gal named Susan is here.");
	}

	onActionWith(a_give, o_paint_purple)
	{
		Textln("Susan says \"thank you\" and disappears.");
		removeObject(o_paint_purple);
		removeObject(o_susan);
	}

}

world
{
	function winCheck()
	{
		Textln("");
		// check if Bob and Susan have absconded.
		if (objectHasNoOwner(o_bob) & objectHasNoOwner(o_susan))
		{
			Textln("Everyone is happy!");
			quit;
		}
		else
		{
			Browse(world);
		}
	}

	start()
	{
		giveObject(world, o_bob);
		giveObject(world, o_susan);
		giveObject(world, o_paint_red);
		giveObject(world, o_paint_yellow);
		giveObject(world, o_paint_blue);
		Textln("These people need a color of paint.");
		Textln("TALK TO them to figure out what they want.");
		Textln("MIX the paint to make different colors, then GIVE the paint to them.");
		winCheck();
	}

	onAction(a_quit)
	{
		quit;
	}
	
	onUnhandledAction(a_give)
	{
		Textln("I can't give that to somebody.");
	}

	onUnhandledAction(a_mix)
	{
		Textln("I can't mix those things together.");
	}

	onIncompleteCommand(a_give)
	{
		Textln("What do you want to give to whom?");
	}

	onIncompleteCommand(a_mix)
	{
		Textln("What do you want to mix with what?");
	}

	onIncompleteCommand(a_examine)
	{
		Textln("What do you want to examine?");
	}

	onIncompleteCommand(a_talk)
	{
		Textln("Who do you want to talk to?");
	}

	onAmbiguousCommand()
	{
		Textln("Be more specific.");
	}

	onMalformedCommand(a_talk)
	{
		Textln("I can't talk to that.");
	}

	onMalformedCommand()
	{
		Textln("I don't understand.");
	}

	onUnknownCommand()
	{
		Textln("I can't do that.");
	}

	afterSuccessfulCommand()
	{
		winCheck();
	}
	
}
