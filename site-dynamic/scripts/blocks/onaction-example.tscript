action general a_quit named "quit";
action general a_look named "look around", "look";
action general a_dance named "dance";
action general a_identifyself;
action general a_switch named "switch", "switch player";

action transitive a_examine named "look at", "examine";
action transitive a_use named "use";

object o_ball named "ball" uses determiners "the"
{
	onAction(a_use)
	{
		Textln("You dribble the ball. Fun!");
	}
	
	onAction(a_examine)
	{
		Textln("It looks like a ball.");
	}

	onRoomBrowse()
	{
		Textln("There's a ball, here.");
	}
}

object o_thing named "thing" uses determiners "the"
{
	onRoomBrowse()
	{
		Textln("There's a thing, here.");
	}
}

room r_main
{
	onAction(a_look)
	{
		Textln("You look around the room.");
		Browse(this);
	}
}

player p_second; // declare for later use.

player p_first
{
	onAction(a_identifyself)
	{
		Textln("I am the first player.");
	}

	onAction(a_dance)
	{
		Textln("You do a jig.");
	}

	onAction(a_switch)
	{
		Textln("Switching to second player.");
		setPlayer(p_second);
	}

	onUnhandledAction(a_use)
	{
		Textln("I can't use that.");
	}

	onUnhandledAction(a_examine)
	{
		Textln("I can't examine that.");
	}
	
	onUnhandledAction()
	{
		Textln("I can't do that.");
	}

}

extend player p_second // finish declaring
{

	onAction(a_identifyself)
	{
		Textln("I am the second player.");
	}

	onAction(a_switch)
	{
		Textln("Switching to first player.");
		setPlayer(p_first);
	}

	onUnhandledAction(a_use)
	{
		Textln("Nope. Can't use that.");
	}

	onUnhandledAction(a_examine)
	{
		Textln("Nope. Can't examine that.");
	}
	
	onUnhandledAction()
	{
		Textln("Nope. Can't do that.");
	}
	
}

world
{	
	onAction(a_quit)
	{
		quit;
	}

	onUnhandledAction(a_dance)
	{
		Textln("I can't dance.");
	}
	
	start()
	{
		setRoom(p_first, r_main);
		setRoom(p_second, r_main);
		setPlayer(p_first);
		giveObject(room, o_ball);
		giveObject(room, o_thing);
		Browse(room);
		queue a_identifyself;
	}
}
